package com.fr.bi.cal.analyze.cal.store;import com.finebi.cube.conf.table.BusinessTable;import com.fr.bi.conf.report.widget.field.dimension.filter.ResultFilter;import com.fr.bi.stable.report.key.TargetGettingKey;import com.fr.bi.stable.report.result.DimensionCalculator;import com.fr.general.ComparatorUtils;import java.util.Map;/** * Created by Hiram on 2015/1/5. */public class FilterGroupKey extends GroupKey {    private ResultFilter resultFilter;    private Map<String, TargetGettingKey> targetsMap;    public FilterGroupKey(BusinessTable targetTableKey, DimensionCalculator[] key) {        super(targetTableKey, key);    }    public void setResultFilter(ResultFilter resultFilter) {        this.resultFilter = resultFilter;    }    public void setTargetsMap(Map<String, TargetGettingKey> targetsMap) {        this.targetsMap = targetsMap;    }    @Override    public boolean equals(Object o) {        if (this == o) {            return true;        }        if (!(o instanceof FilterGroupKey)) {            return false;        }        if (!super.equals(o)) {            return false;        }        FilterGroupKey that = (FilterGroupKey) o;        if (resultFilter != null ? !ComparatorUtils.equals(resultFilter, that.resultFilter) : that.resultFilter != null) {            return false;        }        if (targetsMap != null ? !ComparatorUtils.equals(targetsMap, that.targetsMap) : that.targetsMap != null) {            return false;        }        return true;    }    @Override    public int hashCode() {        int result = super.hashCode();        result = 31 * result + (resultFilter != null ? resultFilter.hashCode() : 0);        result = 31 * result + (targetsMap != null ? targetsMap.hashCode() : 0);        return result;    }}
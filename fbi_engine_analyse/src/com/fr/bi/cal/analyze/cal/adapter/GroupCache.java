package com.fr.bi.cal.analyze.cal.adapter;import com.fr.bi.cal.analyze.cal.sssecret.ISingleDimensionGroup;import com.fr.bi.cal.analyze.cal.store.GroupKey;import com.fr.bi.cal.analyze.session.BISession;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;/** * Created by Hiram on 2015/7/10. */public class GroupCache {    private final static int CACHE_SIZE = 1 << 20;    private static Map<GroupKey, ISingleDimensionGroup> lightCache = new ConcurrentHashMap<GroupKey, ISingleDimensionGroup>();    public static ISingleDimensionGroup getLightDimensionGroupCache(BISession session, GroupKey groupKey) {        return lightCache.get(groupKey);    }    public static void putLightSingleDimensionGroupCache(BISession session, GroupKey groupKey, ISingleDimensionGroup singleDimensionGroup) {        if (lightCache.size() > 1000) {            lightCache.clear();        }        lightCache.put(groupKey, singleDimensionGroup);    }}
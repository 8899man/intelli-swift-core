package com.fr.bi.stable.report.result;import com.fr.bi.stable.gvi.GroupValueIndex;import com.fr.bi.stable.report.key.TargetGettingKey;import com.fr.general.NameObject;import java.util.Comparator;import java.util.Map;/** * Created by Hiram on 2015/1/26. */public interface LightNode extends SummaryValue {    int getChildLength();    LightNode getChild(int i);    LightNode getFirstChild();    LightNode getSibling();    void setSibling(LightNode sibling);    LightNode getParent();    void setParent(LightNode parent);    LightNode getChild(Object key);    void addChild(LightNode child);    void setData(Object data);    String getShowValue();    void setShowValue(String showValue);    Comparator getComparator();    void setComparator(Comparator comparator);    Comparable getChildTOPNValueLine(int N);    Comparable getChildBottomNValueLine(int n);    LightNode getLastChild();    Map<TargetGettingKey, GroupValueIndex> getTargetIndexValueMap();    void setTargetIndexValueMap(Map<TargetGettingKey, GroupValueIndex> targetIndexValueMap);    Map<TargetGettingKey, GroupValueIndex> getGroupValueIndexMap();    void setGroupValueIndexMap(Map<TargetGettingKey, GroupValueIndex> gviMap);    LightNode createSortedNode(NameObject targetSort,                               Map<String, TargetGettingKey> targetsMap);    LightNode createSortedNode(NameObject targetSort, Map<String, TargetCalculator> targetsMap, ISortInfoList sortInfoList, int i);    double getChildTOPNValueLine(TargetGettingKey targetKey, int n);}
apply plugin:'java'

//应用jacoco plugin
apply plugin : 'jacoco'
tasks.withType(JavaCompile){
	options.encoding = 'UTF-8'
}


repositories {
    mavenCentral()
}

//sourceCompatibility=1.5


//===============

// fine-bi-foundation-5.0.jar（基础功能包，依赖fine-decision-10.0.jar）
// fine-bi-engine-index-5.0.jar（Index引擎包，依赖fine-bi-foundation-5.0.jar）
// fine-bi-engine-spider-5.0.jar（spider引擎包，依赖fine-bi-foundation-5.0.jar）
//===============

def jarname='fine-bi-engine-swift-1.0.jar'
//指定生成的jar包版本
version='1.0'

def libDir = "../../lib-core"

//每次构建前先删掉build目录和reports目录
ant.delete(dir:"build")
ant.delete(dir:"reports")




jar{
//指定生成jar包的名称
	baseName='fine-bi-engine-index'
}
def list=[
		"swift_base/src",
		"swift_history/src",
		"swift_realtime/src",
		"swift_indexing/src",
		"swift_analyse/src",
		"swift_server/src"
	]

//指定源码所在位置：
sourceSets{
	main.java.srcDirs=list

}

configurations{
	ftpAntTask
}
//添加ftp依赖
dependencies {
    ftpAntTask("org.apache.ant:ant-commons-net:1.8.4") {
        module("commons-net:commons-net:1.4.1") {
            dependencies "oro:oro:2.0.8:jar"
        }
    }
}

test {
	//这条很重要，设置忽略fail掉的测试用例。否则会导致项目构建失败
	ignoreFailures = true
	jacoco {
		append = true
		//二进制代码覆盖测试报告文件存放路径
		destinationFile = file("reports/jacoco/jacoco.exec")
	}
}
//声明外部依赖
dependencies{
	compile fileTree(dir:"${libDir}",include:'**/*.jar')
	testCompile 'junit:junit:4.12'
}
//指明无法编译文件所在路径
def dataContent ={def dir ->
		copySpec{
			from ("${dir}"){
				exclude '**/.setting/**',
				'.classpath',
				'.project',
				'**/*.java',
				'**/*.db',
				'**/*.g',
				'**/package.html',
				'**/*.less',
				'**/cross/demo/**'
			}
		}
}

task updateTime(dependsOn:compileJava){
	// ant.mkdir(dir:"temp")
 //        InputStream is = new FileInputStream(new File("fbi_base/src/com/finebi/build.properties"));
 //        OutputStream out = new FileOutputStream(new File("temp/build.properties"));
 //        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(out));
 //        BufferedReader br = new BufferedReader(new InputStreamReader(is));
 //        String s = br.readLine();
 //        while (s!=null) {
 //            StringBuilder sb = new StringBuilder();
 //            if(s.startsWith("RELEASE=")){
 //                sb.append("RELEASE=");
 //                sb.append(new Date().format("yyyy-MM-dd"));
 //            }else{
 //                sb.append(s);
 //            }
 //            bw.write(sb.toString());
 //            bw.newLine();
 //            s=br.readLine();
 //        }
 //        br.close();
 //        bw.close();
	// ant.copy(todir:"fbi_base/src/com/finebi/"){
	// 	fileset(file:"temp/build.properties")
	// }
	// ant.delete(dir:"temp")
}

//将非.java文件复制到classes文件夹下 参与打包
task copyFile(type:Copy,dependsOn:updateTime){
	list.each{ def srcDir->
		copy{
			with dataContent.call("${srcDir}") 
			into ('build/classes/main')
		}
	}
}

//添加打包时间
task addTime(dependsOn:'compressJS'){
	ant.delete(file:"bibuild.txt")
	def date = new Date()
	def formattedDate = date.format('yyyy.MM.dd.HH.mm.ss.S')
	File file =file(new File('bibuild.txt'))
	FileWriter fw=new FileWriter(file)
	fw.write(formattedDate)
	fw.close()
	ant.copy(todir:"build/classes/main/"){
		fileset(file:"bibuild.txt")
	}			
}

//混淆代码
task obfuse(dependsOn:'build')<<{
	ant.delete(dir:"JAR/tmp/1.8")
	ant.mkdir(dir:"JAR/tmp/1.8")
	ant.taskdef(name:'yguard',classname:'com.yworks.yguard.YGuardTask',classpath:"${BI_HOME}/lib4build/yguard.jar")
	ant.yguard(){
		inoutpair(in:"build/libs/${jarname}",out:"JAR/tmp/1.8/${jarname}")
		rename(){
		keep{
			method(name:'void main(String[])'){
				patternset(id:'datapatternset'){
					include (name:'**.*')
				}
			}
			method(name:'void readObject(java.io.ObjectInputStream)'){
				patternset(refid:'datapatternset')
			}
			method(name:'void writeObject(java.io.ObjectOutputStream)'){
				patternset(refid:'datapatternset')				
			}
			field(name:'serialVersionUID'){
				patternset(refid:'datapatternset')				
			}
			'class'(methods:'private',fields:'private'){
				patternset{
					include(name:'**.*')
					exclude(name:'com.fr.report.core.cal.**.*')
					exclude(name:'com.fr.base.core.util.vt.**.*')
					exclude(name:'com.fr.web.core.service.**.*')
				}
			}
		}
		}
	}
	ant.delete(file:'yguardlog.xml')
}





//def ftpPath = "E:/ftp/share/finebi/5.0/feature"

//上传生成的jar包到ftp上
// task ftp_uploadjar(dependsOn:obfuse)<<{
// 	ant{
// 		ftp(server:'192.168.5.86',userid:'fr',password:'ilovejava',remotedir:"${ftpPath}",action:'put'){
// 			// fileset(refid:'ftp.upload.fileset.jar')
// 			fileset(dir:"JAR/tmp/1.8/"){
// 				include(name:"*.jar")
// 			}
// 		}
// 	}
// }
// task ftp_uploadjar(dependsOn:obfuse)<<{
// 	ant{
// 		copy(todir:"${ftpPath}"){
// 			fileset(dir:"JAR/tmp/1.8/"){
// 				include(name:"*.jar")
// 			}
// 		}
// 	}
// }
